<?php

namespace frontend\models;

use Yii;
use yii\web\IdentityInterface;

/**
 * This is the model class for table "member".
 *
 * @property integer $id
 * @property string $username
 * @property string $auth_key
 * @property string $password_hash
 * @property string $email
 * @property integer $tel
 * @property integer $last_login_time
 * @property integer $last_login_ip
 * @property integer $status
 * @property integer $created_at
 * @property integer $updated_at
 */
class Member extends \yii\db\ActiveRecord implements IdentityInterface
{
    public $password;//接收明文密码
//    public $code;//验证码
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'member';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['username', 'email', 'tel'], 'required'],
            [['tel', 'last_login_time', 'last_login_ip', 'status', 'created_at', 'updated_at'], 'integer'],
            [['username'], 'string', 'max' => 50],
            [['auth_key'], 'string', 'max' => 32],
            [['email'],'email'],
            [['password_hash', 'email'], 'string', 'max' => 100],
            [['username'], 'unique'],
            [['email'], 'unique'],
            [['password'],'safe'],
//            [['code'],'captcha']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => '用户名',
            'auth_key' => 'Auth Key',
            'password_hash' => '用户密码(密文)',
            'email' => '用户邮箱',
            'tel' => '电话号码',
            'last_login_time' => '最后登录时间',
            'last_login_ip' => '最后登录ip',
            'status' => '账号状态',
            'created_at' => '添加时间',
            'updated_at' => '修改时间',
        ];
    }

    /*
     * 写入数据库之前
     * */
    public function beforeSave($insert)
    {
        if ($insert) {
            $this->password_hash = Yii::$app->security->generatePasswordHash($this->password);
            $this->created_at = time();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function findIdentity($id)
    {
        return static::findOne($id);
        // TODO: Implement findIdentity() method.
    }

    public static function findIdentityByAccessToken($token, $type = null)
    {
        // TODO: Implement findIdentityByAccessToken() method.
    }

    public function getId()
    {
        return $this->id;
        // TODO: Implement getId() method.
    }

    public function getAuthKey()
    {
        return $this->auth_key;
        // TODO: Implement getAuthKey() method.
    }

    public function validateAuthKey($authKey)
    {
        return $authKey === $this->getAuthKey();
        // TODO: Implement validateAuthKey() method.
    }

    /*
     * 记录最后登录时间和ip
     * */
    public function LastLogin()
    {
        $this->last_login_time=time();
        $this->last_login_ip= ip2long(\Yii::$app->request->getUserIP());
        $this->save();
    }

    public function getCookieCarts()
    {
        $cookies = Yii::$app->request->cookies;
        $carts = $cookies->getValue('carts');
        if ($carts != null) {
            $carts = unserialize($carts);
            $member_id = Yii::$app->user->identity->getId();
            foreach ($carts as $k=>$v) {
                $cart = Cart::findOne(['member_id'=>$member_id,'goods_id'=>$k]);
                if ($cart) {//存在就合并数量
                    $cart->amount += $v;
                }else{//不存在就添加
                    $cart = new Cart();
                    $cart -> goods_id = $k;
                    $cart -> member_id = $member_id;
                    $cart -> amount = $v;
                }
                $cart->save();
            }
            Yii::$app->response->cookies->remove('carts');
        }
    }



}
